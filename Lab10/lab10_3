Task 1: What does the confusion matrix show for this example?
  
  classifier = train_linear_classification_model(
             learning_rate=0.03,
             steps=1000,
             batch_size=30,
             training_examples=training_examples,
             training_targets=training_targets,
             validation_examples=validation_examples,
             validation_targets=validation_targets)
             
  Final accuracy (on validation data): 0.90
  
  The confusion matrix for this example shows that predicted labels and true labels match up with accuracy above 0.8 (which is
  0.90 for this example) with few matches around with low accuracy.

Task 2: How does the TensorFlow network architecture differ from the Keras example given in class? Report any improvements you 
can make over the baseline testset accuracy for this task.

  TensorFlow network architecture has DNNClassifier object with hidden units included.
  
  classifier = train_nn_classification_model(
    learning_rate=0.05,
    steps=1000,
    batch_size=30,
    hidden_units=[100, 100],
    training_examples=training_examples,
    training_targets=training_targets,
    validation_examples=validation_examples,
    validation_targets=validation_targets)
    
  Final accuracy (on validation data): 0.95
  
  
  
  
  
Task 3: What differences can you see between the visualizations for 10 steps and 1000 steps?

  10 steps: the shape is only distinguishable with different shade for each pixel that you cannot see the coherency between. 
  100 steps: better than 10 steps, but the shape still looks incoherent.  
  1000 steps: the shape is distibguishable that the images are ears and noses with smoother connections between pixels. 

